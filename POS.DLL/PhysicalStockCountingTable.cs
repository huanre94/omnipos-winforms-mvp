//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace POS.DLL
{
    using System;
    using System.Collections.Generic;
    
    public partial class PhysicalStockCountingTable
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public PhysicalStockCountingTable()
        {
            this.PhysicalStockCountingLine = new HashSet<PhysicalStockCountingLine>();
        }
    
        public int PhysicalStockCountingId { get; set; }
        public int PhysicalStockCountingIdLocal { get; set; }
        public short LocationId { get; set; }
        public int EmissionPointId { get; set; }
        public int InventLocationId { get; set; }
        public System.DateTime CountingDate { get; set; }
        public string Type { get; set; }
        public int StockCountingId { get; set; }
        public Nullable<int> ERPId { get; set; }
        public string Observation { get; set; }
        public string Status { get; set; }
        public int CreatedBy { get; set; }
        public System.DateTime CreatedDatetime { get; set; }
        public Nullable<int> ModifiedBy { get; set; }
        public Nullable<System.DateTime> ModifiedDatetime { get; set; }
        public string Workstation { get; set; }
    
        public virtual InventLocation InventLocation { get; set; }
        public virtual Location Location { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PhysicalStockCountingLine> PhysicalStockCountingLine { get; set; }
    }
}
